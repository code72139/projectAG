// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_AG.Data;

#nullable disable

namespace Project_AG.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250601021528_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project_AG.Models.Deposito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaDeposito")
                        .HasColumnType("datetime2");

                    b.Property<int>("FondoMonetarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FondoMonetarioId");

                    b.ToTable("Depositos");
                });

            modelBuilder.Entity("Project_AG.Models.DetalleGasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RegistroGastoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoGastoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistroGastoId");

                    b.HasIndex("TipoGastoId");

                    b.ToTable("DetallesGasto");
                });

            modelBuilder.Entity("Project_AG.Models.FondoMonetario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionFondo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreFondo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TipoFondoMonetario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FondosMonetarios");
                });

            modelBuilder.Entity("Project_AG.Models.PresupuestoTipoGasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoPresupuestado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoGastoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoGastoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PresupuestosTipoGasto");
                });

            modelBuilder.Entity("Project_AG.Models.RegistroGasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FondoMonetarioId")
                        .HasColumnType("int");

                    b.Property<string>("NombreComercio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FondoMonetarioId");

                    b.ToTable("RegistrosGasto");
                });

            modelBuilder.Entity("Project_AG.Models.TipoGasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposGasto");
                });

            modelBuilder.Entity("Project_AG.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Contrasena");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Contrasena = "9K7Cwg3Qw/8FR/S9VvrNdgl8znxhPagMZ4QrajV/3AQ=",
                            NombreUsuario = "admin"
                        });
                });

            modelBuilder.Entity("Project_AG.Models.Deposito", b =>
                {
                    b.HasOne("Project_AG.Models.FondoMonetario", "FondoMonetario")
                        .WithMany("Depositos")
                        .HasForeignKey("FondoMonetarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FondoMonetario");
                });

            modelBuilder.Entity("Project_AG.Models.DetalleGasto", b =>
                {
                    b.HasOne("Project_AG.Models.RegistroGasto", "RegistroGasto")
                        .WithMany("DetallesGasto")
                        .HasForeignKey("RegistroGastoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_AG.Models.TipoGasto", "TipoGasto")
                        .WithMany()
                        .HasForeignKey("TipoGastoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegistroGasto");

                    b.Navigation("TipoGasto");
                });

            modelBuilder.Entity("Project_AG.Models.PresupuestoTipoGasto", b =>
                {
                    b.HasOne("Project_AG.Models.TipoGasto", "TipoGasto")
                        .WithMany()
                        .HasForeignKey("TipoGastoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_AG.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoGasto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Project_AG.Models.RegistroGasto", b =>
                {
                    b.HasOne("Project_AG.Models.FondoMonetario", "FondoMonetario")
                        .WithMany("RegistrosGasto")
                        .HasForeignKey("FondoMonetarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FondoMonetario");
                });

            modelBuilder.Entity("Project_AG.Models.FondoMonetario", b =>
                {
                    b.Navigation("Depositos");

                    b.Navigation("RegistrosGasto");
                });

            modelBuilder.Entity("Project_AG.Models.RegistroGasto", b =>
                {
                    b.Navigation("DetallesGasto");
                });
#pragma warning restore 612, 618
        }
    }
}
